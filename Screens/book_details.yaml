- Book Details:
    Control: Screen
    Properties:
      Fill: =RGBA(237, 237, 237, 1)
    Children:
    - Search_book_name:
        Control: Classic/TextInput
        Properties:
          OnChange: |-
            =UpdateContext({ SelectedItem: Blank() })
          Default: =
          HintText: ="Enter Book Name"
          X: =468
          Y: =10
    - MenuLeftNav_3:
        Control: Component
        ComponentName: MenuLeftNav
        Properties:
          AdminAccess: =varAdminAccess
          HamburgerMenuColor: =Color.Blue
          LoggedUser: =varLoggedUser
          MenuBkgColor: =RGBA(220,220,220,1)
          MenuColor: =Color.Purple
          MenuItems: |
            =Table(
                {
                    MenuLabel: "Dashboard",
                    MenuIcon: Icon.Home,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 1,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "Book Catalog",
                    MenuIcon: Icon.Database,
                    MenuScreenNavigate: 'Book Catalog',
                    MenuID: 2,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "Book Details",
                    MenuIcon: Icon.ListScrollWatchlist,
                    MenuScreenNavigate: 'Book Details',
                    MenuID: 3,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "Your Books",
                    MenuIcon: Icon.Notebook,
                    MenuScreenNavigate: 'Your Books',
                    MenuID: 4,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "Wishlist / Favorites",
                    MenuIcon: Icon.Heart,
                    MenuScreenNavigate: 'Wishlist / Favorites',
                    MenuID: 5,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "Book Reservations",
                    MenuIcon: Icon.CalendarBlank,
                    MenuScreenNavigate: 'Book Reservations',
                    MenuID: 6,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "Borrowing History",
                    MenuIcon: Icon.History,
                    MenuScreenNavigate: 'Borrowing History',
                    MenuID: 7,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "Library Ranking",
                    MenuIcon: Icon.Globe,
                    MenuScreenNavigate: 'Library Ranking',
                    MenuID: 8,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "User Profile",
                    MenuIcon: Icon.Person,
                    MenuScreenNavigate: 'User Profile',
                    MenuID: 9,
                    SubMenu: Table()
                },
                {
                    MenuLabel: "Admin Panel",
                    MenuIcon: Icon.Manufacture,
                    //MenuScreenNavigate: 'Admin Panel',
                    MenuID: 10,
                    VisibleSubMenu: true,
                    SubMenu: Table(
                        {
                            MenuLabel: "Add Book",
                            MenuIcon: Icon.AddDocument,
                            MenuScreenNavigate: 'Add Book',
                            MenuID: 1
                        },
                        {
                            MenuLabel: "Edit Book",
                            MenuIcon: Icon.ColorPicker,
                            MenuScreenNavigate: 'Edit Book',
                            MenuID: 2
                        },
                        {
                            MenuLabel: "Delete Book",
                            MenuIcon: Icon.ClearDrawing,
                            MenuScreenNavigate: 'Delete Book',
                            MenuID: 3
                        },
                        {
                            MenuLabel: "Manage Users",
                            MenuIcon: Icon.People,
                            MenuScreenNavigate: 'Manage Users',
                            MenuID: 4
                        },
                        {
                            MenuLabel: "Manage Loans",
                            MenuIcon: Icon.Currency,
                            MenuScreenNavigate: 'Manage Loans',
                            MenuID: 5
                        },
                        {
                            MenuLabel: "Manage Reservations",
                            MenuIcon: Icon.PhotosPictures,
                            MenuScreenNavigate: 'Manage Reservations',
                            MenuID: 6
                        },
                        {
                            MenuLabel: "Library Settings",
                            MenuIcon: Icon.Settings,
                            MenuScreenNavigate: 'Library Settings',
                            MenuID: 7
                        },
                        {
                            MenuLabel: "Check Log",
                            MenuIcon: Icon.Warning,
                            MenuScreenNavigate: 'Check Log',
                            MenuID: 8
                        }
                    )
                }
            )
          SetMenuWidth: =300
          Height: =If(!MenuLeftNav_3.showMenuProp, 50, App.Height)
          Width: =MenuLeftNav_3.MenuWidth
    - Button2:
        Control: Classic/Button
        Properties:
          OnSelect: =Navigate(Dashboard,ScreenTransition.Cover)
          Text: ="Back to dashboard"
          Height: =44
          RadiusBottomLeft: =100
          RadiusBottomRight: =100
          RadiusTopLeft: =100
          RadiusTopRight: =100
          Width: =209
          X: =1132
          Y: =701
    - Gallery1:
        Control: Gallery
        Variant: galleryVertical
        Properties:
          Items: |+
            =Filter(Sheet1s, 
                   (IsBlank(SelectedItem) || Index = SelectedItem.Index) && 
                   (IsBlank(Search_book_name.Text) || Search_book_name.Text in Title))
          DelayItemLoading: =true
          Fill: =RGBA(237, 237, 237, 1)
          Height: =692
          Layout: =Layout.Vertical
          LoadingSpinner: =LoadingSpinner.Data
          TemplateSize: =643
          Width: =1366
          Y: =74
        Children:
        - Reserve_book_btn:
            Control: Classic/Button
            Properties:
              OnSelect: |+
                =ClearCollect(CurrentReservations, Filter(Library_Reservations, Book_ID = selectedBookId && 'Status (cre0e_status)' = "Reserved"));
                Set(NewIndex, Text(If(IsEmpty(Library_Reservations), 1, Value(Max(Library_Reservations, Index)) + 1), "[$-en-US]0"));
                Set(QueuePosition, Text(CountRows(CurrentReservations) + 1, "[$-en-US]0"));
                Collect(Library_Reservations, {
                    Index: NewIndex,
                    Book_ID: selectedBookId,
                    Username: currentUsername,
                    'Status (cre0e_status)': "Reserved",
                    Queue_Position: QueuePosition
                });

                Notify("Book reserved successfully! Your position in queue: " & QueuePosition, NotificationType.Success);


                Patch(
                    Library_logs,
                    Defaults(Library_logs),
                    {
                        Event_ID: Text(Max(Library_logs, Event_ID) + 1),
                        Event_Type: "Book Reservation",
                        Description: "Book reserved successfully",
                        Event_Name: "Reserve Book",
                        Event_Screen: App.ActiveScreen.Name,
                        Event_Level: "3",  
                        Book_ID: selectedBookId,
                        Username: currentUsername,
                        User_Role: If(loggedInUser.admin_access = "Yes", "Admin", "User"),
                        Event_Status: "Successful"
                    }
                )

              Text: |+
                =If(
                    !IsBlank(
                        LookUp(Library_Reservations, Book_ID = selectedBookId && Username = currentUsername && 'Status (cre0e_status)' = "Reserved")
                    ),
                    "Reserved", 
                    "Reserve a book" 
                )
              DisplayMode: |+
                =If(
                    !IsBlank(
                        LookUp(Library_Reservations, Book_ID = selectedBookId && Username = currentUsername && 'Status (cre0e_status)' = "Reserved")
                    ),
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
              Fill: =RGBA(99, 139, 44, 1)
              Height: =52
              HoverFill: =ColorFade(RGBA(99, 139, 44, 1), -20%)
              RadiusBottomLeft: =100
              RadiusBottomRight: =100
              RadiusTopLeft: =100
              RadiusTopRight: =100
              Width: =183
              X: =1092
              Y: =289
        - Rent_book_btn:
            Control: Classic/Button
            Properties:
              OnSelect: |+
                =Set(selectedBookId, id_data.Text);
                Set(currentUsername, loggedInUser.username);
                Set(existingLoan, LookUp(BookLoans, Book_ID = selectedBookId && 'Status (cre0e_status)' = "rented"));



                If(
                    IsBlank(existingLoan),
                    Patch(
                        BookLoans,
                        Defaults(BookLoans),
                        {
                            Index: If(IsEmpty(BookLoans), 1, Max(BookLoans, Index) + 1),
                            Book_ID: selectedBookId,
                            Username: currentUsername,
                            Borrow_Date: Today(),
                            Return_Date: DateAdd(Today(), 14),
                            'Status (cre0e_status)': "rented"
                        }
                    );
                    Patch(
                        Library_logs,
                        Defaults(Library_logs),
                        {
                            Event_ID: Text(Max(Library_logs, Event_ID) + 1),
                            Event_Type: "Book Loan",
                            Description: "Book borrowed successfully",
                            Event_Name: "Borrow Book",
                            Event_Screen: App.ActiveScreen.Name,
                            Event_Level: "3",
                            Book_ID: selectedBookId,
                            Username: currentUsername,
                            User_Role: If(loggedInUser.admin_access = "Yes", "Admin", "User"),
                            Event_Status: "Successful"
                        }
                    ),
                    Set(daysRemaining, DateDiff(Today(), existingLoan.Return_Date));
                    If(
                        existingLoan.'Status (cre0e_status)' = "rented" && existingLoan.Return_Date >= Today(),
                        Notify("The book is unavailable! Days remaining: " & daysRemaining, NotificationType.Error),
                        Notify("The book is unavailable. Please wait for its return.", NotificationType.Error)
                    );
                    Patch(
                        Library_logs,
                        Defaults(Library_logs),
                        {
                            Event_ID: Text(Max(Library_logs, Event_ID) + 1),
                            Event_Type: "Book Loan",
                            Description: "Book is unavailable",
                            Event_Name: "Borrow Book Attempt",
                            Event_Screen: App.ActiveScreen.Name,
                            Event_Level: "3",
                            Book_ID: selectedBookId,
                            Username: currentUsername,
                            User_Role: If(loggedInUser.admin_access = "Yes", "Admin", "User"),
                            Event_Status: "Failed"
                        }
                    )
                );
              Text: |+
                =If(
                    IsBlank(LookUp(BookLoans, Book_ID = selectedBookId && 'Status (cre0e_status)' = "rented")),
                    "Rent a Book", 
                    "Rented"
                )
              Fill: |+
                =If(
                    !IsBlank(LookUp(BookLoans, Book_ID = selectedBookId && 'Status (cre0e_status)' = "rented")),
                    RGBA(255, 0, 0, 1), 
                    RGBA(0, 255, 0, 1)
                )
              Height: =52
              HoverFill: |+
                =If(
                    !IsBlank(LookUp(BookLoans, Book_ID = selectedBookId && 'Status (cre0e_status)' = "rented")),
                    RGBA(255, 0, 0, 1), 
                    RGBA(0, 255, 0, 1)
                )
              PressedFill: |+
                =If(
                    !IsBlank(LookUp(BookLoans, Book_ID = selectedBookId && 'Status (cre0e_status)' = "rented")),
                    RGBA(255, 0, 0, 1), 
                    RGBA(0, 255, 0, 1)
                )
              RadiusBottomLeft: =100
              RadiusBottomRight: =100
              RadiusTopLeft: =100
              RadiusTopRight: =100
              Width: =183
              X: =1092
              Y: =213
        - Book_data:
            Control: Group
            Children:
            - summary_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.Summary
                  FontWeight: =FontWeight.Bold
                  Height: =113
                  Width: =673
                  X: =613
                  Y: =474
            - lang_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.Language
                  FontWeight: =FontWeight.Bold
                  X: =613
                  Y: =317
            - name_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.Title
                  FontWeight: =FontWeight.Bold
                  Height: =31
                  Width: =264
                  X: =613
                  Y: =36
            - isbn_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.ISBN
                  FontWeight: =FontWeight.Bold
                  X: =613
                  Y: =431
            - genre_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.Genre
                  FontWeight: =FontWeight.Bold
                  X: =613
                  Y: =265
            - id_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.Index
                  FontWeight: =FontWeight.Bold
                  X: =613
                  Y: =373
            - year_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.Publication_Year
                  FontWeight: =FontWeight.Bold
                  X: =613
                  Y: =205
            - pages_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.Number_of_Pages
                  FontWeight: =FontWeight.Bold
                  X: =613
                  Y: =147
            - author_data:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: =ThisItem.Author
                  FontWeight: =FontWeight.Bold
                  Width: =264
                  X: =613
                  Y: =82
        - Add_to_wishlist:
            Control: Classic/Button
            Properties:
              OnSelect: "=Set(\r\n    existingRecord,\r\n    LookUp(Wishlist, Book_ID = id_data.Text && Username = loggedInUser.username)\r\n);\r\n\r\nIf(\r\n    !IsBlank(existingRecord),\r\n    Remove(Wishlist, existingRecord);\r\n    \r\n    Patch(\r\n        Library_logs,\r\n        Defaults(Library_logs),\r\n        {\r\n            Event_ID: Text(Max(Library_logs, Event_ID) + 1),\r\n            Event_Type: \"Wishlist\",\r\n            Description: \"Book removed from wishlist\",\r\n            Event_Name: \"Remove Wishlist Item\",\r\n            Event_Screen: App.ActiveScreen.Name,\r\n            Event_Level: \"3\",\r\n            Book_ID: id_data.Text,\r\n            Username: loggedInUser.username,\r\n            User_Role: If(loggedInUser.admin_access = \"Yes\", \"Admin\", \"User\"),\r\n            Event_Status: \"Successful\"\r\n        }\r\n    ),\r\n    \r\n    Patch(\r\n        Wishlist,\r\n        Defaults(Wishlist),\r\n        {\r\n            Index: If(IsEmpty(Wishlist), 1, Max(Wishlist, Index) + 1),\r\n            Book_ID: id_data.Text,\r\n            Username: loggedInUser.username\r\n        }\r\n    );\r\n    Patch(\r\n        Library_logs,\r\n        Defaults(Library_logs),\r\n        {\r\n            Event_ID: Text(Max(Library_logs, Event_ID) + 1),\r\n            Event_Type: \"Wishlist\",\r\n            Description: \"Book added to wishlist\",\r\n            Event_Name: \"Add Wishlist Item\",\r\n            Event_Screen: App.ActiveScreen.Name,\r\n            Event_Level: \"3\",\r\n            Book_ID: id_data.Text,\r\n            Username: loggedInUser.username,\r\n            User_Role: If(loggedInUser.admin_access = \"Yes\", \"Admin\", \"User\"),\r\n            Event_Status: \"Successful\"\r\n        }\r\n    )\r\n);\r\n"
              Text: |+
                =If(
                    IsBlank(LookUp(Wishlist, Book_ID = id_data.Text && Username = loggedInUser.username)),
                    "Add to wishlist",
                    "Remove from wishlist"
                )
              Fill: =RGBA(255, 0, 0, 1)
              Height: =52
              HoverFill: =ColorFade(RGBA(255, 0, 0, 1), -20%)
              RadiusBottomLeft: =100
              RadiusBottomRight: =100
              RadiusTopLeft: =100
              RadiusTopRight: =100
              Width: =183
              X: =1092
              Y: =137
        - Book_Fields:
            Control: Group
            Children:
            - Book sumary_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="Book Summary:"
                  X: =449
                  Y: =511
            - ISBN_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="ISBN:"
                  X: =449
                  Y: =431
            - ID_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="Book ID:"
                  X: =449
                  Y: =374
            - Lang_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="Language:"
                  X: =449
                  Y: =316
            - Genre_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="Genre:"
                  X: =449
                  Y: =260
            - Year_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="Publication Year:"
                  Height: =59
                  X: =449
                  Y: =198
            - Pages_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="Pages:"
                  X: =449
                  Y: =140
            - Author_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="Author:"
                  X: =449
                  Y: =82
            - Book Name_field:
                Control: Label
                Properties:
                  OnSelect: =Select(Parent)
                  Text: ="Book Name:"
                  X: =449
                  Y: =31
        - IMG_Book:
            Control: Image
            Properties:
              OnSelect: =Select(Parent)
              Image: =ThisItem.Cover_URL
              Height: =566
              Width: =392
              X: =28
              Y: =21
    - PageTitle_2:
        Control: Component
        ComponentName: PageTitle
        Properties:
          screenInfo: =App.ActiveScreen
          Height: =50
          Width: =200
          X: =1166
